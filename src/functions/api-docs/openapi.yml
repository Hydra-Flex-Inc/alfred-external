openapi: 3.0.0
info:
  title: Alfred External APIs
  description: >
    These are the APIs in place to support the Alfred web site. They are fronted by Azure API Management.

    For those endpoints that are expecting a user ID, the request must include a secure server-only cookie named `HFI_ALFRED_AUTH_TOKEN` that is created as follows:

    * The user will have logged in to the Alfred web site and been issued a JWT token from Auth0
    * A request to `set-cookie` with that JWT will result in a token being stored for the user in the database, and that token being written to a secure server-only cookie

    That token is used to look up the user, get the ID, and use that ID for the completion of the request.

    Note: These requests are backed by two Postgres databases:

    * One in our Azure containing "business" information ilke users, businesses, locations, and the relationship of components
    * One in TimescaleDB containing the time series data from the IoT Hub
  version: 2.0.0
servers:
  - url: https://alfred-api.hydraflexinc.com/alfred
    description: "Production server"
  - url: http://localhost:7071/api
    description: "Development server"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    cookieAuth:
      type: apiKey
      in: cookie
      name: HFI_ALFRED_AUTH_TOKEN
  schemas:
    ChemicalContainer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        iot_hub_device_id:
          type: string
        chemical:
          type: string
        container_size_gals:
          type: number
        container_type:
          type: string
        name:
          type: string
        sensors:
          type: array
          items:
            type: string
        container_cost:
          type: number
        currency_code:
          type: string
        associated_valves:
          type: array
          items:
            type: object
            properties:
              panel:
                type: integer
              valve:
                type: integer
        level_sensor_ids:
          type: array
          items:
            type: string
            format: uuid
        level_sensor_mac_addresses:
          type: array
          items:
            type: string
        car_wash_package_ids:
          type: array
          items:
            type: string
            format: uuid
    ErrorProperties:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    LocationHours:
      type: object
      properties:
        location_id:
          type: string
          format: uuid
          description: The unique identifier of a location.
        hours:
          type: array
          description: >
            Array of 7 entries – one per day (Monday [1] to Sunday [7] – each entry must either specify valid open/close times or be marked as closed.
          minItems: 7
          maxItems: 7
          items:
            type: object
            properties:
              day:
                type: integer
                minimum: 1
                maximum: 7
                description: The day of the week (1 = Monday, 7 = Sunday).
              open:
                type: string
                pattern: '^([0-1]\d|2[0-3]):([0-5]\d)$'
                nullable: true
                description: Opening time in HH:MM format.
              close:
                type: string
                pattern: '^([0-1]\d|2[0-3]):([0-5]\d)$'
                nullable: true
                description: Closing time in HH:MM format.
              closed:
                type: boolean
                default: false
                description: Indicates if the location is closed on that day.
            required:
              - day
    WashSummary:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date-time
              wash_count:
                type: integer
              wash_total_value:
                type: number
                format: float
    WashPackageListItem:
      type: object
      properties:
        sku:
          type: string
        id:
          type: string
        name:
          type: string
        departmentName:
          type: string
        priceAtSite:
          type: string
        isPromptForPrice:
          type: boolean
        siteId:
          type: integer
        a_la_carte:
          type: boolean

  responses:
    ErrorResponse400:
      description: "Bad Request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorProperties"
    ErrorResponse401:
      description: "Unauthorized"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorProperties"
    ErrorResponse403:
      description: "Forbidden"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorProperties"
    ErrorResponse404:
      description: "Not Found"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorProperties"
    ErrorResponse500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorProperties"

security:
  - cookieAuth: []

paths:
  /add-water-source-id-data:
    post:
      summary: Add water source ID
      description: >
        Adds a water source ID to the chemical container.
        The request body must include the container ID and the water source ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                container_id:
                  type: string
                  format: uuid
                water_source_id:
                  type: string
                  format: uuid
      responses:
        "200":
          description: Water source ID added successfully.
          content:
            application/json:
              schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  modbus_id:
                    type: integer
                  name:
                    type: string
                  position:
                    type: integer
                  iot_hub_device_id:
                    type: string
                  type:
                    type: string
                  software_version:
                    type: string
                  hardware_version:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  deleted_at:
                    type: string
                    format: date-time
                    nullable: true
                  water_source_id:
                    type: string
                    format: uuid
        "400":
          $ref: "#/components/responses/ErrorResponse400"
        "401":
          $ref: "#/components/responses/ErrorResponse401"
        "403":
          $ref: "#/components/responses/ErrorResponse403"
        "404":
          $ref: "#/components/responses/ErrorResponse404"
        "500":
          $ref: "#/components/responses/ErrorResponse500"
  /location-hours:
    post:
      summary: Update location hours
      description: >
        Updates a location's operating hours.
        The hours array must contain an entry for each day of the week.
        If an entry indicates the location is closed (closed=true), then open and close times should be null.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationHours"
      responses:
        "200":
          description: Location hours updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        "400":
          $ref: "#/components/responses/ErrorResponse400"
        "401":
          $ref: "#/components/responses/ErrorResponse401"
        "403":
          $ref: "#/components/responses/ErrorResponse403"
        "404":
          $ref: "#/components/responses/ErrorResponse404"
        "500":
          $ref: "#/components/responses/ErrorResponse500"

  /location-hours-data:
    post:
      summary: Update location hours (no auth required)
      description: >
        Updates a location's operating hours without authentication requirements.
        The hours array must contain an entry for each day of the week.
        If an entry indicates the location is closed (closed=true), then open and close times should be null.
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationHours"
      responses:
        "200":
          description: Location hours updated successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    day:
                      type: integer
                      description: The day of the week (1-7), Monday being 1
                    open:
                      type: string
                      description: The opening time in HH:MM format
                    close:
                      type: string
                      description: The closing time in HH:MM format
                    closed:
                      type: boolean
                      description: True if the location is closed for this entire day
        "400":
          $ref: "#/components/responses/ErrorResponse400"
        "404":
          $ref: "#/components/responses/ErrorResponse404"
        "500":
          $ref: "#/components/responses/ErrorResponse500"

  /wash-summary:
    get:
      summary: Retrieve wash summary
      description: >
        Retrieves a time-series summary of wash data.
        Query parameters include the location ID, a start date, an end date, and the desired date grouping (day, week, month).
      parameters:
        - in: query
          name: lid
          schema:
            type: string
            format: uuid
          required: true
          description: The unique location ID.
        - in: query
          name: start
          schema:
            type: string
            format: date-time
          required: true
          description: Start date in ISO 8601 format.
        - in: query
          name: end
          schema:
            type: string
            format: date-time
          required: true
          description: End date in ISO 8601 format.
        - in: query
          name: dateFormat
          schema:
            type: string
            enum: [day, week, month]
          description: Date grouping format for the wash summary.
      responses:
        "200":
          description: Wash summary retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WashSummary"
        "400":
          $ref: "#/components/responses/ErrorResponse400"
        "401":
          $ref: "#/components/responses/ErrorResponse401"
        "403":
          $ref: "#/components/responses/ErrorResponse403"
        "500":
          $ref: "#/components/responses/ErrorResponse500"

  /back-office-wash-package-list:
    get:
      summary: Retrieve back office wash package list
      description: >
        Retrieves a list of available wash packages for the back office.
        Requires the location ID as a query parameter.
      parameters:
        - in: query
          name: lid
          schema:
            type: string
            format: uuid
          required: true
          description: The unique location ID.
      responses:
        "200":
          description: Back office wash package list retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  packages:
                    type: array
                    items:
                      $ref: "#/components/schemas/WashPackageListItem"
        "400":
          $ref: "#/components/responses/ErrorResponse400"
        "401":
          $ref: "#/components/responses/ErrorResponse401"
        "403":
          $ref: "#/components/responses/ErrorResponse403"
        "404":
          description: No packages found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorProperties"
        "500":
          $ref: "#/components/responses/ErrorResponse500"
